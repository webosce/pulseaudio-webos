#!/usr/bin/pulseaudio -nF
#
# This file is part of PulseAudio.
#
# PulseAudio is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# PulseAudio is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with PulseAudio; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.

# This startup script is used only if PulseAudio is started in system
# mode.

### Automatically load driver modules depending on the hardware available
.ifexists module-udev-detect.so
load-module module-udev-detect
.else
### Use the static hardware detection module (for systems that lack udev/hal support)
load-module module-detect
.endif

### Load several protocols
.ifexists module-esound-protocol-unix.so
load-module module-esound-protocol-unix
.endif

load-module module-native-protocol-unix auth-anonymous=1

### Automatically restore the volume of streams and devices
#load-module module-stream-restore
load-module module-device-restore

### Automatically restore the default sink/source when changed by the user
### during runtime
### NOTE: This should be loaded as early as possible so that subsequent modules
### that look up the default sink/source get the right value
load-module module-default-device-restore

.ifexists module-dbus-protocol.so
### If you want to allow TCP connections, set access to "remote" or "local,remote".
load-module module-dbus-protocol access=local
.endif

### Automatically move streams to the default sink if the sink they are
### connected to dies, similar for sources
#load-module module-rescue-streams

### Make sure we always have a sink around, even if it is a null sink.
#load-module module-always-sink

### Automatically suspend sinks/sources that become idle for too long
load-module module-suspend-on-idle

### Enable positioned event sounds
load-module module-position-event-sounds

# pcm source+sink
# define sinks for physical devices

load-module module-alsa-sink device=hw:0,0 mmap=0 sink_name=pcm_output fragment_size=4096 tsched=0
#load-module module-alsa-source device=hw:0 mmap=0 source_name=pcm_input fragment_size=4096 tsched=0

# default pcm
set-default-sink pcm_output
set-default-source pcm_input

# define sinks for virtual devices, apps should write to these
# since these will be used to implement policy management

load-module module-null-sink sink_name=palerts
load-module module-null-sink sink_name=pfeedback
load-module module-null-sink sink_name=pringtones
load-module module-null-sink sink_name=pmedia
load-module module-null-sink sink_name=pdefaultapp
load-module module-null-sink sink_name=peffects
load-module module-null-sink sink_name=pvoicerecognition
load-module module-null-sink sink_name=ptts
load-module module-null-sink sink_name=pndk

load-module module-palm-policy

#load-module module-null-source source_name=precord          description="source for general recording"
